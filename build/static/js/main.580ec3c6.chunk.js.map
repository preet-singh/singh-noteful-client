{"version":3,"sources":["CircleButton/CircleButton.js","ApiContext.js","notes-helpers.js","NoteListNav/NoteListNav.js","NotePageNav/NotePageNav.js","config.js","Note/Note.js","NoteListMain/NoteListMain.js","NotePageMain/NotePageMain.js","AddFolder.js","AddNote.js","ErrorPage.js","App/App.js","index.js"],"names":["NavCircleButton","props","tag","className","childrenm","otherProps","Object","objectWithoutProperties","React","createElement","objectSpread","join","children","defaultProps","createContext","notes","folders","addFolder","addNote","deleteNote","findNote","arguments","length","undefined","noteId","find","note","id","Number","NoteListNav","_this$context","this","context","_this$context$folders","_this$context$notes","react_default","a","map","folder","key","NavLink","to","concat","folderId","filter","folder_id","countNotesForFolder","folder_name","Link","type","react_fontawesome_index_es","icon","Component","contextType","ApiContext","NotePageNav","_this","match","params","findFolder","role","onClick","history","goBack","config","API_ENDPOINT","Note","handleClickDelete","e","preventDefault","fetch","method","headers","content-type","then","res","ok","json","Promise","reject","onDeleteNote","catch","error","console","_this$props","name","modified","format","NoteListMain","notesForFolder","getNotesForFolder","Note_Note_Note","note_name","Date","date_modified","toString","NotePageMain","handleDeleteNote","push","note_content","split","para","i","AddFolder","state","handleAddFolder","newFolder","body","JSON","stringify","getFolderName","setState","target","value","validateFolderName","_this2","onSubmit","htmlFor","onChange","disabled","AddNote","content","handleAddNote","newNote","alert","getNoteName","getNoteContent","getNoteModified","toLocaleString","getNoteFolderId","validateNoteName","validateContent","validateFolder","ErrorPage","App","addNewFolder","toConsumableArray","componentDidMount","addNewNote","all","_ref","_ref2","slicedToArray","notesRes","foldersRes","_ref3","_ref4","Fragment","path","Route","exact","component","Provider","renderNavRoutes","ErrorPage_ErrorPage","renderMainRoutes","library","add","faPlus","faChevronLeft","faTrashAlt","faCheckDouble","ReactDOM","render","BrowserRouter","src_App_App","document","getElementById"],"mappings":"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","file":"static/js/main.580ec3c6.chunk.js","sourcesContent":["import React from 'react'\nimport './CircleButton.css'\n\nexport default function NavCircleButton(props) {\n  const { tag, className, childrenm, ...otherProps } = props\n\n  return React.createElement(\n    props.tag,\n    {\n      className: ['NavCircleButton', props.className].join(' '),\n      ...otherProps\n    },\n    props.children\n  )\n}\n\nNavCircleButton.defaultProps ={\n  tag: 'a',\n}\n","import React from 'react'\n\nexport default React.createContext({\n  notes: [],\n  folders: [],\n  addFolder: () => {},\n  addNote: () => {},\n  deleteNote: () => {},\n})\n","\nexport const findFolder = (folders=[], folderId) =>\n  folders.find(folder => folder.id === Number(folderId))\n\nexport const findNote = (notes=[], noteId) =>\n  notes.find(note => note.id === Number(noteId))\n\nexport const getNotesForFolder = (notes=[], folderId) => (\n  (!folderId)\n    ? notes\n    : notes.filter(note => note.folder_id === Number(folderId))\n)\n\nexport const countNotesForFolder = (notes=[], folderId) =>\n  notes.filter(note => note.folder_id === folderId).length\n","import React from 'react'\nimport { NavLink, Link } from 'react-router-dom'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport CircleButton from '../CircleButton/CircleButton'\nimport ApiContext from '../ApiContext'\nimport { countNotesForFolder } from '../notes-helpers'\nimport './NoteListNav.css'\n\nexport default class NoteListNav extends React.Component {\n  static contextType = ApiContext;\n\n  render() {\n    const { folders=[], notes=[] } = this.context\n    return (\n      <div className='NoteListNav'>\n        <ul className='NoteListNav__list'>\n          {folders.map(folder =>\n            <li key={Number(folder.id)}>\n              <NavLink\n                className='NoteListNav__folder-link'\n                to={`/folder/${folder.id}`}\n              >\n                <span className='NoteListNav__num-notes'>\n                  {countNotesForFolder(notes, folder.id)}\n                </span>\n                {folder.folder_name}\n              </NavLink>\n            </li>\n          )}\n        </ul>\n        <div className='NoteListNav__button-wrapper'>\n          <CircleButton\n            tag={Link}\n            to='/add-folder'\n            type='button'\n            className='NoteListNav__add-folder-button'\n          >\n            <FontAwesomeIcon icon='plus' />\n            <br />\n            Folder\n          </CircleButton>\n        </div>\n      </div>\n    )\n  }\n}\n","import React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport CircleButton from '../CircleButton/CircleButton'\nimport ApiContext from '../ApiContext'\nimport { findNote, findFolder } from '../notes-helpers'\nimport PropTypes from 'prop-types';\nimport './NotePageNav.css'\n\nexport default class NotePageNav extends React.Component {\n  static defaultProps = {\n    history: {\n      goBack: () => { }\n    },\n    match: {\n      params: {}\n    }\n  }\n  static contextType = ApiContext;\n\n  render() {\n    const { notes, folders, } = this.context\n    const { noteId } = this.props.match.params\n    const note = findNote(notes, noteId) || {}\n    const folder = findFolder(folders, note.folder_id)\n    return (\n      <div className='NotePageNav'>\n        <CircleButton\n          tag='button'\n          role='link'\n          onClick={() => this.props.history.goBack()}\n          className='NotePageNav__back-button'\n        >\n          <FontAwesomeIcon icon='chevron-left' />\n          <br />\n          Back\n        </CircleButton>\n        {folder && (\n          <h3 className='NotePageNav__folder-name'>\n            {folder.folder_name}\n          </h3>\n        )}\n      </div>\n    )\n  }\n}\n\nNotePageNav.propTypes = {\n  history: PropTypes.object.isRequired,\n  match: PropTypes.object.isRequired\n}","export default {\n  API_ENDPOINT: 'https://whispering-badlands-11039.herokuapp.com/api'\n}\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { format } from 'date-fns'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport ApiContext from '../ApiContext'\nimport config from '../config'\nimport './Note.css'\nimport PropTypes from 'prop-types';\n\nexport default class Note extends React.Component {\n  static defaultProps ={\n    onDeleteNote: () => {},\n  }\n  static contextType = ApiContext;\n\n  handleClickDelete = e => {\n    e.preventDefault()\n    const noteId = this.props.id\n\n    fetch(`${config.API_ENDPOINT}/notes/${noteId}`, {\n      method: 'DELETE',\n      headers: {\n        'content-type': 'application/json'\n      }\n    })\n      .then(res => {\n        if (!res.ok)\n          return res.json().then(e => Promise.reject(e))\n      })\n      .then(() => {\n        this.context.deleteNote(noteId)\n        // allow parent to perform extra behaviour\n        this.props.onDeleteNote(noteId)\n      })\n      .catch(error => {\n        console.error({ error })\n      })\n  }\n\n  render() {\n    const { name, id, modified } = this.props\n    return (\n      <div className='Note'>\n        <h2 className='Note__title'>\n          <Link to={`/note/${id}`}>\n            {name}\n          </Link>\n        </h2>\n        <button\n          className='Note__delete'\n          type='button'\n          onClick={this.handleClickDelete}\n        >\n          <FontAwesomeIcon icon='trash-alt' />\n          {' '}\n          remove\n        </button>\n        <div className='Note__dates'>\n          <div className='Note__dates-modified'>\n            Modified\n            {' '}\n            <span className='Date'>\n              {format(modified, 'Do MMM YYYY')}\n            </span>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nNote.propTypes = {\n  onDeleteNote: PropTypes.func.isRequired\n}","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport Note from '../Note/Note'\nimport CircleButton from '../CircleButton/CircleButton'\nimport ApiContext from '../ApiContext'\nimport { getNotesForFolder } from '../notes-helpers'\nimport './NoteListMain.css'\nimport PropTypes from 'prop-types';\n\nexport default class NoteListMain extends React.Component {\n  static defaultProps = {\n    match: {\n      params: {}\n    }\n  }\n  static contextType = ApiContext\n\n  render() {\n    const { folderId } = this.props.match.params\n    const { notes=[] } = this.context\n    const notesForFolder = getNotesForFolder(notes, folderId)\n    return (\n      <section className='NoteListMain'>\n        <ul>\n          {notesForFolder.map( note =>\n            <li key={Number(note.id)}>\n              <Note\n                id={note.id}\n                name={note.note_name}\n                modified={Date(note.date_modified).toString()}\n              />\n            </li>\n          )}\n        </ul>\n        <div className='NoteListMain__button-container'>\n          <CircleButton\n            tag={Link}\n            to='/add-note'\n            type='button'\n            className='NoteListMain__add-note-button'\n          >\n            <FontAwesomeIcon icon='plus' />\n            <br />\n            Note\n          </CircleButton>\n        </div>\n      </section>\n    )\n  }\n}\n\nNoteListMain.propTypes = {\n  match: PropTypes.object.isRequired\n}\n","import React from 'react'\nimport Note from '../Note/Note'\nimport ApiContext from '../ApiContext'\nimport { findNote } from '../notes-helpers'\nimport './NotePageMain.css'\nimport PropTypes from 'prop-types';\n\nexport default class NotePageMain extends React.Component {\n  static defaultProps = {\n    match: {\n      params: {}\n    }\n  }\n  static contextType = ApiContext\n\n  handleDeleteNote = noteId => {\n    this.props.history.push(`/`)\n  }\n\n  render() {\n    const { notes=[] } = this.context\n    const { noteId } = this.props.match.params\n    const note = findNote(notes, noteId) || { note_content: '' }\n    return (\n      <section className='NotePageMain'>\n        <Note\n          id={note.id}\n          name={note.note_name}\n          modified={Date(note.date_modified).toString()}\n          onDeleteNote={this.handleDeleteNote}\n        />\n        <div className='NotePageMain__content'>\n          {note.note_content.split(/\\n \\r|\\n/).map((para, i) =>\n            <p key={i}>{para}</p>\n          )}\n        </div>\n      </section>\n    )\n  }\n}\n\nNotePageMain.propTypes = {\n  match: PropTypes.object.isRequired,\n  history: PropTypes.object.isRequired\n}\n","import React, { Component } from \"react\";\nimport ApiContext from \"./ApiContext\";\nimport config from \"./config\";\nimport PropTypes from 'prop-types';\n\nexport default class AddFolder extends Component {\n  state = {\n    name: ''\n  }\n\n  static contextType = ApiContext;\n\n  handleAddFolder = (e) => {\n    e.preventDefault();\n\n    const newFolder = {\n      folder_name: this.state.name\n    };\n\n    fetch(`${config.API_ENDPOINT}/folders`, {\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json\"\n      },\n      body: JSON.stringify(newFolder)\n    })\n      .then(res => {\n        if (!res.ok) return res.json().then(e => Promise.reject(e));\n      })\n      .then(() => {\n        this.context.addFolder(newFolder);\n        this.props.history.push('/');\n      })\n      .catch(error => {\n        console.error({ error });\n      });\n  };\n\n  getFolderName = (e) => {\n    this.setState({name: e.target.value});\n  }\n\n  validateFolderName = () => {\n    let folderName = this.state.name;\n\n    if (!folderName) {\n        return 'Folder name is required'\n    } else {\n        return null\n    }\n}\n\n  render() {\n    return (\n      <form className='addNoteOrFolder' onSubmit={e => this.handleAddFolder(e)}>\n        <div>\n          <label htmlFor=\"folderName\">New Folder Name: </label>\n          <input type=\"text\" id=\"folderName\" value={this.state.name} onChange={ this.getFolderName } />\n          {this.validateFolderName && <p className='validationElement'>{this.validateFolderName()}</p>}\n          <button disabled={this.validateFolderName()} type=\"submit\">Submit</button>\n        </div>\n      </form>\n    );\n  }\n}\n\nAddFolder.propTypes = {\n  history: PropTypes.object.isRequired\n}","import React, { Component } from 'react';\nimport config from './config';\nimport ApiContext from './ApiContext';\nimport PropTypes from 'prop-types'\n\nexport default class AddNote extends Component {\n\n  state = {\n    name: '',\n    content: '',\n    folderId: '',\n    modified: ''\n  }\n\n  static contextType = ApiContext;\n\n  handleAddNote = (e) => {\n    e.preventDefault();\n\n    const newNote = {\n      note_name: this.state.name,\n      date_modified: this.state.modified,\n      note_content: this.state.content,\n      folder_id: this.state.folderId\n    };\n\n    fetch(`${config.API_ENDPOINT}/notes`, {\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json\"\n      },\n      body: JSON.stringify(newNote)\n    })\n      .then(res => {\n        if (!res.ok) return res.json().then(e => Promise.reject(e));\n      })\n      .then(() => {\n        this.context.addNote(newNote);\n        this.props.history.push('/');\n      })\n      .catch(error => {\n        alert({ error });\n      });\n  };\n\n  getNoteName = (e) => {\n    this.setState({ name: e.target.value });\n  }\n\n  getNoteContent = (e) => {\n    this.setState({ content: e.target.value });\n  }\n\n  getNoteModified = (e) => {\n    this.setState({ modified: new Date().toLocaleString() });\n  }\n\n  getNoteFolderId = (e) => {\n    this.setState({ folderId: e.target.value });\n  }\n\n  validateNoteName = () => {\n    let note = this.state.name;\n\n    if (!note) {\n      return 'Note name is required'\n    } else {\n      return null\n    }\n  }\n\n  validateContent = () => {\n    let note = this.state.content;\n\n    if (!note) {\n      return 'Note content is required'\n    } else {\n      return null\n    }\n  }\n\n  validateFolder = () => {\n    let folder = this.state.folderId;\n\n    if (!folder) {\n      return 'Note content is required'\n    } else {\n      return null\n    }\n  }\n\n  render() {\n    const { folders } = this.context;\n\n    return (\n      <form className='addNoteOrFolder' onSubmit={e => this.handleAddNote(e)}>\n        <div>\n          <label htmlFor='noteName'>New Note Name: </label>\n          <input type='text' id='noteName' value={this.state.name} onChange={ this.getNoteName } />\n          {this.validateNoteName && <p className='validationElement'>{this.validateNoteName()}</p>}\n        </div>\n        <div>\n          <label htmlFor='noteContent'>Content: </label>\n          <input type='text' id='noteName' value={this.state.content} onChange={ this.getNoteContent } />\n          {this.validateContent && <p className='validationElement'>{this.validateContent()}</p>}\n        </div>\n        <div>\n          <select name='Choose folder...' value={this.state.folderId} onChange={ this.getNoteFolderId }>\n            <option key=\"default\" value={null}>Select folder</option>\n            {folders.map((folder) => <option key={Number(folder.id)} value={folder.id}>{folder.folder_name}</option>)}\n          </select>\n          {this.validateFolder && <p className='validationElement'>{this.validateFolder()}</p>}\n        </div>\n        <div>\n          <button disabled={this.validateNoteName() || this.validateContent() || this.validateFolder()} \n                  type='submit' \n                  onClick={ this.getNoteModified }>\n                    Submit\n          </button>\n        </div>\n      </form>\n    );\n  }\n}\n\nAddNote.propTypes = {\n  history: PropTypes.object.isRequired\n}","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class ErrorPage extends Component {\n  state = {\n    error: null\n  };\n\n  // Static method\n  static getDerivedStateFromError(error) {\n      return {error};\n  }\n  render() {\n      if (this.state.error) {\n          return (\n              <main className=\"error-page\">\n                  <h1>Something seems to have gone wrong</h1>\n                  <p>Try refreshing the page</p>\n              </main>\n          );\n      }\n      return this.props.children;\n  }\n}\n\nErrorPage.propTypes = {\n    children: PropTypes.object.isRequired\n  }","import React, { Component } from 'react';\nimport { Route, Link } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport NoteListNav from '../NoteListNav/NoteListNav';\nimport NotePageNav from '../NotePageNav/NotePageNav';\nimport NoteListMain from '../NoteListMain/NoteListMain';\nimport NotePageMain from '../NotePageMain/NotePageMain';\nimport AddFolder from '../AddFolder';\nimport AddNote from '../AddNote';\nimport ApiContext from '../ApiContext';\nimport config from '../config';\nimport ErrorPage from '../ErrorPage'\n\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    notes: [],\n    folders: []\n  };\n\n  componentDidMount() {\n    Promise.all([\n      fetch(`${config.API_ENDPOINT}/notes`),\n      fetch(`${config.API_ENDPOINT}/folders`)\n    ])\n      .then(([notesRes, foldersRes]) => {\n        if (!notesRes.ok)\n          return notesRes.json().then(e => Promise.reject(e));\n        if (!foldersRes.ok)\n          return foldersRes.json().then(e => Promise.reject(e));\n\n        return Promise.all([notesRes.json(), foldersRes.json()]);\n      })\n      .then(([notes, folders]) => {\n        this.setState({ notes, folders });\n      })\n      .catch(error => {\n        console.error({ error });\n      });\n  }\n\n  handleDeleteNote = noteId => {\n    this.setState({\n      notes: this.state.notes.filter(note => note.id !== noteId)\n    });\n  };\n\n  addNewFolder = (newFolder) => {\n    this.setState({\n      folders: [\n        ...this.state.folders,\n        newFolder\n      ]\n    }, this.componentDidMount())\n  }\n\n  addNewNote = (newNote) => {\n    this.setState({\n      notes: [\n        ...this.state.notes,\n        newNote\n      ]\n    }, this.componentDidMount())\n  }\n\n  renderNavRoutes() {\n    return (\n      <>\n        {['/', '/folder/:folderId'].map(path => (\n          <Route\n            exact\n            key={path}\n            path={path}\n            component={NoteListNav}\n          />\n        ))}\n        <Route path=\"/note/:noteId\" component={NotePageNav} />\n        <Route path=\"/add-folder\" component={NotePageNav} />\n        <Route path=\"/add-note\" component={NotePageNav} />\n      </>\n    );\n  }\n\n  renderMainRoutes() {\n    return (\n      <>\n        {['/', '/folder/:folderId'].map(path => (\n          <Route\n            exact\n            key={path}\n            path={path}\n            component={NoteListMain}\n          />\n        ))}\n        <Route path=\"/note/:noteId\" component={NotePageMain} />\n        <Route path='/add-folder' component={AddFolder} />\n        <Route path='/add-note' component={AddNote} />\n      </>\n    );\n  }\n\n  render() {\n    const value = {\n      notes: this.state.notes,\n      folders: this.state.folders,\n      deleteNote: this.handleDeleteNote,\n      addFolder: this.addNewFolder,\n      addNote: this.addNewNote\n    };\n\n    return (\n      <ApiContext.Provider value={value}>\n        <div className=\"App\">\n          <nav className=\"App__nav\">{this.renderNavRoutes()}</nav>\n          <header className=\"App__header\">\n            <h1>\n              <Link to=\"/\">Noteful</Link>{' '}\n              <FontAwesomeIcon icon=\"check-double\" />\n            </h1>\n          </header>\n          <ErrorPage>\n            <main className=\"App__main\">{this.renderMainRoutes()}</main>\n          </ErrorPage>\n        </div>\n      </ApiContext.Provider>\n    );\n  }\n}\n\nexport default App;","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport {\n  faPlus, faChevronLeft, faTrashAlt, faCheckDouble\n} from '@fortawesome/free-solid-svg-icons'\nimport { BrowserRouter } from 'react-router-dom'\nimport 'typeface-roboto'\nimport './index.css'\nimport App from './App/App'\n\nlibrary.add(faPlus, faChevronLeft, faTrashAlt, faCheckDouble)\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}