{"ast":null,"code":"import _classCallCheck from \"/Users/Preet/test/node_testing/stevenB-noteful-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Preet/test/node_testing/stevenB-noteful-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Preet/test/node_testing/stevenB-noteful-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Preet/test/node_testing/stevenB-noteful-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Preet/test/node_testing/stevenB-noteful-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Preet/test/node_testing/stevenB-noteful-client/src/AddFolder.js\";\nimport React, { Component } from \"react\";\nimport ApiContext from \"./ApiContext\";\nimport config from \"./config\";\nimport PropTypes from 'prop-types';\n\nvar AddFolder =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AddFolder, _Component);\n\n  function AddFolder() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, AddFolder);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(AddFolder)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      name: ''\n    };\n\n    _this.handleAddFolder = function (e) {\n      e.preventDefault();\n      var newFolder = {\n        folder_name: _this.state.name\n      };\n      fetch(\"\".concat(config.API_ENDPOINT, \"/folders\"), {\n        method: \"POST\",\n        headers: {\n          \"content-type\": \"application/json\"\n        },\n        body: JSON.stringify(newFolder)\n      }).then(function (res) {\n        if (!res.ok) return res.json().then(function (e) {\n          return Promise.reject(e);\n        });\n      }).then(function () {\n        _this.context.addFolder(newFolder);\n\n        _this.props.history.push('/');\n      }).catch(function (error) {\n        console.error({\n          error: error\n        });\n      });\n    };\n\n    _this.getFolderName = function (e) {\n      _this.setState({\n        name: e.target.value\n      });\n    };\n\n    _this.validateFolderName = function () {\n      var folderName = _this.state.name;\n\n      if (!folderName) {\n        return 'Folder name is required';\n      } else {\n        return null;\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(AddFolder, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"form\", {\n        className: \"addNoteOrFolder\",\n        onSubmit: function onSubmit(e) {\n          return _this2.handleAddFolder(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"folderName\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, \"New Folder Name: \"), React.createElement(\"input\", {\n        type: \"text\",\n        id: \"folderName\",\n        value: this.state.name,\n        onChange: this.getFolderName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }), this.validateFolderName && React.createElement(\"p\", {\n        className: \"validationElement\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, this.validateFolderName()), React.createElement(\"button\", {\n        disabled: this.validateFolderName(),\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, \"Submit\")));\n    }\n  }]);\n\n  return AddFolder;\n}(Component);\n\nAddFolder.contextType = ApiContext;\nexport { AddFolder as default };\nAddFolder.propTypes = {\n  history: PropTypes.object.isRequired\n};","map":{"version":3,"sources":["/Users/Preet/test/node_testing/stevenB-noteful-client/src/AddFolder.js"],"names":["React","Component","ApiContext","config","PropTypes","AddFolder","state","name","handleAddFolder","e","preventDefault","newFolder","folder_name","fetch","API_ENDPOINT","method","headers","body","JSON","stringify","then","res","ok","json","Promise","reject","context","addFolder","props","history","push","catch","error","console","getFolderName","setState","target","value","validateFolderName","folderName","contextType","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport ApiContext from \"./ApiContext\";\nimport config from \"./config\";\nimport PropTypes from 'prop-types';\n\nexport default class AddFolder extends Component {\n  state = {\n    name: ''\n  }\n\n  static contextType = ApiContext;\n\n  handleAddFolder = (e) => {\n    e.preventDefault();\n\n    const newFolder = {\n      folder_name: this.state.name\n    };\n\n    fetch(`${config.API_ENDPOINT}/folders`, {\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json\"\n      },\n      body: JSON.stringify(newFolder)\n    })\n      .then(res => {\n        if (!res.ok) return res.json().then(e => Promise.reject(e));\n      })\n      .then(() => {\n        this.context.addFolder(newFolder);\n        this.props.history.push('/');\n      })\n      .catch(error => {\n        console.error({ error });\n      });\n  };\n\n  getFolderName = (e) => {\n    this.setState({name: e.target.value});\n  }\n\n  validateFolderName = () => {\n    let folderName = this.state.name;\n\n    if (!folderName) {\n        return 'Folder name is required'\n    } else {\n        return null\n    }\n}\n\n  render() {\n    return (\n      <form className='addNoteOrFolder' onSubmit={e => this.handleAddFolder(e)}>\n        <div>\n          <label htmlFor=\"folderName\">New Folder Name: </label>\n          <input type=\"text\" id=\"folderName\" value={this.state.name} onChange={ this.getFolderName } />\n          {this.validateFolderName && <p className='validationElement'>{this.validateFolderName()}</p>}\n          <button disabled={this.validateFolderName()} type=\"submit\">Submit</button>\n        </div>\n      </form>\n    );\n  }\n}\n\nAddFolder.propTypes = {\n  history: PropTypes.object.isRequired\n}"]},"metadata":{},"sourceType":"module"}